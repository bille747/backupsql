#!/bin/bash
DATE=$(date)
echo "[$(date +%Y-%m-%d_%T)] - Starting backup process!" >> /var/log/cron.log
mysqldump -uSQL_userid -pSQL_pwd -hMySQLIP --single-transaction --skip-lock-tables -e --all-databases | pv -tab | gzip > /backup/MyDatabase_$(date +%Y-%m-%d_%H.%M.%S).sql.gz

#http://scratching.psybermonkey.net/2011/01/bash-how-to-check-exit-status-of-pipe.html
if [ ${PIPESTATUS[0]} -ne "0" ];
then
   echo "[$(date +%Y-%m-%d_%T)] - MySQL database backup failed with Error: ${PIPESTATUS[0]}" >> /var/log/cron.log;
   exit 1;   
else
   echo "[$(date +%Y-%m-%d_%T)] - MySQL Backup completed!" >> /var/log/cron.log;
fi


##Delete files "My*" older than BACKUPCOPIES days
find /backup/My* -mtime +BACKUPCOPIES -exec rm {} \;

   
#restore databases   
# gunzip < MyDatabase_DATE.sql.gz | mysql -uxbmc -h 192.168.0.40


#https://github.com/dockerfile/mariadb/issues/3
#TERM env variable